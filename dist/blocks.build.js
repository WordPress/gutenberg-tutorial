!function(g){function I(A){if(C[A])return C[A].exports;var e=C[A]={i:A,l:!1,exports:{}};return g[A].call(e.exports,e,e.exports,I),e.l=!0,e.exports}var C={};I.m=g,I.c=C,I.d=function(g,C,A){I.o(g,C)||Object.defineProperty(g,C,{configurable:!1,enumerable:!0,get:A})},I.n=function(g){var C=g&&g.__esModule?function(){return g.default}:function(){return g};return I.d(C,"a",C),C},I.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)},I.p="",I(I.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('Object.defineProperty(__webpack_exports__, "__esModule", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__block_block_js__ = __webpack_require__(/*! ./block/block.js */ 1);\n/**\n * Gutenberg Blocks\n *\n * All blocks related JavaScript.\n * You can create a new block folder in\n * this dir and include code for that block\n * here as well.\n *\n * All blocks should be included here since\n * this is the file that Webpack is compiling.\n */\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9ibG9ja3MuanM/N2I1YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEd1dGVuYmVyZyBCbG9ja3NcbiAqXG4gKiBBbGwgYmxvY2tzIHJlbGF0ZWQgSmF2YVNjcmlwdC5cbiAqIFlvdSBjYW4gY3JlYXRlIGEgbmV3IGJsb2NrIGZvbGRlciBpblxuICogdGhpcyBkaXIgYW5kIGluY2x1ZGUgY29kZSBmb3IgdGhhdCBibG9ja1xuICogaGVyZSBhcyB3ZWxsLlxuICpcbiAqIEFsbCBibG9ja3Mgc2hvdWxkIGJlIGluY2x1ZGVkIGhlcmUgc2luY2VcbiAqIHRoaXMgaXMgdGhlIGZpbGUgdGhhdCBXZWJwYWNrIGlzIGNvbXBpbGluZy5cbiAqL1xuXG5pbXBvcnQgJy4vYmxvY2svYmxvY2suanMnO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2Jsb2Nrcy5qc1xuLy8gbW9kdWxlIGlkID0gMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__style_scss__ = __webpack_require__(/*! ./style.scss */ 2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__style_scss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__editor_scss__);\n/**\n * BLOCK: Event Block\n *\n * Saves event name, tagline and description statically to content. Illustrates using different types of Gutenberg attributes.\n */\n\n//  Import CSS.\n\n\n\nvar __ = wp.i18n.__; // WordPress translation functions\n\nvar registerBlockType = wp.blocks.registerBlockType; //The blocks API\n\nvar el = wp.element.createElement; //WordPress Render function\nvar RichText = wp.blocks.RichText; //Native WordPress (TinyMCE powered) rich-text editor.\nvar UrlInput = wp.blocks.UrlInputButton; //Native WordPress URL input with post lookup\nvar TextAreaControl = wp.components.TextareaControl; //Native WordPress textarea control\nvar TextControl = wp.components.TextControl; //Native WordPress text control\nvar CheckboxControl = wp.components.CheckboxControl; //Native WordPress checkbox\n/**\n * Register: aa Gutenberg Block.\n *\n *\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nregisterBlockType('learn-gutenberg/ex2-event-block', {\n    //Name of block\n    title: __('Learn Gutenberg: Event Block', 'learn-gutenberg'),\n    //Icon for block\n    icon: 'groups',\n    //Block category\n    category: 'common',\n    //Help the search box find this block\n    keywords: [__('Event', 'learn-gutenberg'), __('Learn Gutenberg', 'learn-gutenberg'), __('create-guten-block')],\n    //declare our attributes\n    attributes: {\n        //attributes.name\n        //Value will be the HTML of saved 'h2' element or the default.\n        heading: {\n            //this attribute is a string\n            'type': 'string',\n            //The data is saved HTML of matching element\n            source: 'html',\n            //That element has the type h2\n            selector: 'h2',\n            //This is the default value.\n            default: __('Event Title', 'learn-gutenberg')\n        },\n        //attributes.tagline\n        //Value will be the HTML of saved 'h3' element or the default.\n        tagline: {\n            //this attribute is a string\n            'type': 'string',\n            //The data source is saved HTML of matching element\n            source: 'html',\n            //That element has the type h3\n            selector: 'h3',\n            //This is the default value.\n            default: __('Event Tagline', 'learn-gutenberg')\n        },\n        //attributes.description\n        //Value will be an array with any number of saved 'p' elements or the default.\n        description: {\n            //this attribute is an array\n            type: 'array',\n            //There are one or more elements with this data.\n            source: 'children',\n            //These elements all are of the type \"p\"\n            selector: 'p',\n            //This is the default value.\n            default: __('Event Description', 'learn-gutenberg')\n        },\n        //attributes.size\n        size: {\n            //This attribute is a string\n            type: 'integer',\n            //Find text\n            source: 'text',\n            //From an element with class\n            selector: '.event-size'\n        },\n        //attributes.free\n        free: {\n            //This attribute is a boolean\n            type: 'boolean',\n            //Save as post meta\n            source: 'meta',\n            //Store in meta key\n            meta: 'learn_gutenberg_ex2_event_block_is_free'\n        }\n    },\n    /**\n     * Edit callback to create event editor\n     *\n     * @param attributes\n     * @param setAttributes\n     * @param className\n     * @param isSelected\n     * @param id\n     * @returns {XML}\n     */\n    edit: function edit(_ref) {\n        var attributes = _ref.attributes,\n            setAttributes = _ref.setAttributes,\n            className = _ref.className,\n            isSelected = _ref.isSelected,\n            id = _ref.id;\n\n\n        /**\n         * Change handler for when the event tagline changes\n         *\n         * @param {String} updatedText\n         */\n        var onChangeHeading = function onChangeHeading(updatedText) {\n            //Update \"heading\" attribute\n            setAttributes({ heading: updatedText });\n        };\n\n        /**\n         * Change handler for when the event heading changes\n         *\n         * @param {String} updatedText New headline\n         */\n        var onChangeTagline = function onChangeTagline(updatedText) {\n            //Update \"tagline\" attribute\n            setAttributes({ tagline: updatedText });\n        };\n\n        /**\n         * Change handler for when the event description changes\n         *\n         * @param {Array} updatedText (The Type of updatedText is array since this input uses RichText)\n         */\n        var onChangeDescription = function onChangeDescription(updatedText) {\n            //Update \"description\" with one or more lines of text.\n            setAttributes({ description: updatedText });\n        };\n\n        /**\n         * Edit or preview the Headline\n         *\n         * @param  {Boolean} isSelected Is block selected?\n         * @param {Function} onChangeHeading Callback function to update headline attribute when input changes.\n         * @param {String} id Unique ID\n         * @constructor\n         */\n        var Headline = function Headline(isSelected, onChangeHeading, id) {\n            if (isSelected) {\n                /** Block is selected **/\n                //Edit the heading\n                //Using WordPress' text control component\n                //See https://github.com/WordPress/gutenberg/tree/master/blocks/inspector-controls/text-control\n                return el(TextControl, {\n                    onChange: onChangeHeading,\n                    //The specific attribute to edit\n                    value: attributes.heading,\n                    //The id attribute to use\n                    instanceId: 'heading-' + id\n\n                });\n            } else {\n                /** Block is not selected **/\n                //Show preview of heading\n                return el(\n                //Creates <h2 className={'heading'}>{attributes.heading}</h3>\n                //The same as in save callback\n                'h2', {\n                    className: 'heading'\n                },\n                //Display tagline\n                attributes.heading);\n            }\n        };\n\n        /**\n         * Edit or preview the tagline for the event\n         *\n         * @param  {Boolean} isSelected Is block selected?\n         * @param {Function} onChangeTagline Callback function to update tagline attribute when input changes.\n         * @param {String} id Unique ID\n         * @constructor\n         */\n        var Tagline = function Tagline(isSelected, onChangeTagline, id) {\n            if (isSelected) {\n                /** Block is selected **/\n                return el(\n                //Show editor\n                //Using WordPress' text area control component\n                //See https://github.com/WordPress/gutenberg/tree/master/blocks/inspector-controls/textarea-control\n                TextAreaControl, {\n                    //The function to call when the tagline changes\n                    onChange: onChangeTagline,\n                    //The specific attribute to edit\n                    value: attributes.tagline,\n                    //limit input to two rows\n                    rows: 2\n                });\n            } else {\n                /** Block is not selected **/\n                //Display preview\n                return el(\n                //Creates <h3 className={'tagline'}>{attributes.tagline}</h3>\n                //The same as in save callback\n                'h3', {\n\n                    className: 'tagline'\n                },\n                //Display tagline\n                attributes.tagline);\n            }\n        };\n\n        /**\n         * Component for the \"Is Free Event\" checkbox\n         * @param {boolean} isSelected\n         * @constructor\n         */\n        var IsFree = function IsFree(isSelected, id) {\n            if (isSelected) {\n                /** Block is selected **/\n                return el(\n                //Show editor\n                //Using WordPress' checkbox component\n                //See https://github.com/WordPress/gutenberg/blob/master/blocks/inspector-controls/checkbox-control/index.js\n                CheckboxControl, {\n                    //Checkbox title\n                    title: __('Free Event', 'learn-gutenberg'),\n                    //Checkbox label\n                    label: __('Yes', 'learn-gutenberg'),\n                    //Is checkbox checked?\n                    checked: attributes.free,\n                    //Used for creating a unique ID for input that is also used for attribute of label\n                    instanceId: id + '-free',\n                    //onChange event handler used\n                    onChange: function onChange() {\n                        var value = !attributes.free;\n                        setAttributes({ free: value });\n                    }\n                });\n            } else {\n                /** Block is not selected **/\n                //Don't show anything\n            }\n        };\n\n        /**\n         * Component for the \"Event Size\" preview or edit\n         * @param {boolean} isSelected\n         * @constructor\n         */\n        var Size = function Size(isSelected, id) {\n            if (isSelected) {\n                /** Block is isSelecteded **/\n                return el(\n                //Show editor\n                //Using WordPress' text control component (HTML5 type will be \"number\")\n                //See https://github.com/WordPress/gutenberg/tree/master/blocks/inspector-controls/text-control\n                TextControl, {\n                    type: 'number',\n                    //The specific attribute to edit\n                    value: attributes.size,\n                    //The id attribute to use\n                    instanceId: 'size-' + id,\n                    //inline change function\n                    onChange: function onChange(value) {\n                        //set size to value of control\n                        setAttributes({ size: value });\n                    },\n                    //label for contorl\n                    label: __('Event Size', 'learn-gutenberg')\n                });\n            } else {\n                /** Block is not selected **/\n                //Show event size\n                el('span', {\n                    className: 'event-size'\n                }, attributes.size);\n            }\n        };\n\n        /**\n         * Display interface\n         */\n        return el(\n        //outer \"div\" element gets block's class name\n        'div', {\n            className: className\n        },\n        //Array of inner elements\n        [\n        //Edit or display the heading for the event\n        Headline(isSelected, onChangeHeading, id),\n        //Edit or preview the tagline for the event\n        Tagline(isSelected, onChangeTagline, id),\n        //Edit the description for the event\n        //Using WordPress' RichText component\n        el(RichText, {\n            //Tag type to preview content inside of.\n            tagName: 'p',\n            //Class to add to preview element\n            className: 'description',\n            //Function called when description changes\n            onChange: onChangeDescription,\n            //The specific attribute to display\n            value: attributes.description,\n            //Boolean, if true, controls show\n            isSelected: isSelected\n        }),\n        //Edit or preview the size of the event\n        Size(isSelected, id),\n        //Edit if event is \"free\"\n        IsFree(isSelected, id)]);\n    },\n\n    /**\n     * Saves static HTML to post content\n     *\n     * Our intent is to create valid HTML, that has consistent markup with the same classes applied to the markup in the editor and front-end.\n     *\n     * @param attributes\n     * @param className\n     */\n    save: function save(_ref2) {\n        var attributes = _ref2.attributes,\n            className = _ref2.className;\n\n        //Create HTML that is the same as the editor, minus the editable interface\n        return el(\n        //Output everything wrapped in one \"div\"\n        'div', {\n            //This class is for the outer most element\n            className: className\n        }, [\n        //Show the event heading\n        el(\n        //Element type - This is the same type used when previewing heading\n        'h2', {\n            //Class - Corresponds to the \"className\" parameter for the RichText responsible for heading\n            className: 'heading'\n        },\n        //Inner HTML - The heading to show\n        attributes.heading),\n        //Show the event tagline\n        el(\n        //Element type - This is the same type previwing the tagline\n        'h3', {\n            //Class - is is the same class used when previewing tagline\n            className: 'tagline'\n        },\n        //Inner HTML - The tagline to show\n        attributes.tagline),\n        //Show the event description\n        el(\n        //Element type - This is the same type used when previewing description\n        'p', {\n            //Class - This is the same class used when previewing description\n            className: 'description'\n        },\n        //Inner HTML - Corresponds to the \"value\" parameter for the RichText responsible for description\n        attributes.description),\n        //Show event size\n        el('span', {\n            className: 'event-size'\n        }, attributes.size)]);\n    }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")},function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9ibG9jay9zdHlsZS5zY3NzPzgwZjMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9ibG9jay9zdHlsZS5zY3NzXG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n")},function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9ibG9jay9lZGl0b3Iuc2Nzcz80OWQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvYmxvY2svZWRpdG9yLnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n")}]);